name: "EfficientNetv2 S Imagenette training pipeline"
pipelines:
  - name: EfficientNetv2 S Imagenette
    loadgen:
      type: poisson
      max_queries: 125
      timeout: 20000
      is_training: True
      batch_size: 8
      config:
        rate: 5
    dataset:
      name: Imagenette dataset
      module_name: torchvision_dataset
      config:
        dataset_name: Imagenette # must be title-case
        split: [val, train]
        weights: EfficientNet_V2_S_Weights.IMAGENET1K_V1
    stages:
      - name: Load Imagenette samples from TorchVision Dataset
        type: data_loading
        module_name: torch_from_dataset
        ingest_dataset: True
        config:
          batch_size: 8
          num_workers: 0 # if 0 no prefetching else prefetches 2*num_workers samples
          preprocessing: True
      # - name: Preprocess Imagenette data coming from DataLoader
      #   type: preprocessing
      #   module_name: torchvision_preprocess_from_weights
      #   config:
      #     weights: EfficientNet_V2_S_Weights.IMAGENET1K_V1
      - name: EfficientNet inference
        type: inference
        module_name: torchvision_classification
        config:
          model: efficientnet_v2_s
          model_checkpoint_path: "efficientnet_example/efficientnet_v2_imagenette.pth"
          replace_classifier: True
          num_classes: 10
